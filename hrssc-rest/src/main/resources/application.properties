# ===============================
# = PORT
# ===============================
## Server Properties
server.port=8080


# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database
spring.datasource.url = jdbc:mysql://localhost:3306/hrssc?useSSL=false
spring.datasource.username = root
spring.datasource.password = 12345
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

## Hibernate Logging
#logging.level.org.hibernate.SQL= DEBUG
logging.level.org.springframework.security=DEBUG
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.show_sql=false

#Get user
spring.queries.users-query=Select u.username, u.password, u.id from hrssc.user u where u.username=?
#Get privileges
spring.queries.permission-query=Select ur.username, prp.title from(Select u.username, r.id from hrssc.user u inner join hrssc.role r on(u.role_id=r.id) where u.username = ?)ur inner join (Select p.title, pr.role_id from hrssc.role_permissions pr inner join hrssc.permission p on(pr.permission_id = p.id))prp where ur.id = prp.role_id

## Jackson Properties -- used to disable serializing Java 8 Data/Time values as timestamps




